// <auto-generated />
using System;
using LibraryManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryManagement.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20241009163246_LibraryManagement")]
    partial class LibraryManagement
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryManagement.Models.Admin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminID"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminID");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            AdminID = 1,
                            PasswordHash = "$2a$11$mN4.xi2strH66seOKFw.WObhI5u7WkdsTN4GZlbu/rgIyvoi7q7Re",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("LibraryManagement.Models.Book", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookID"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameBook")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BookID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookID = 1,
                            Author = "Nam Cao",
                            CategoryID = 1,
                            Detail = "Một tác phẩm kinh điển của Nam Cao.",
                            ImageUrl = "https://product.hstatic.net/200000017360/product/chi-pheo_72e3f1370e484cf49b0fc94ee4ce0f80_master.jpg",
                            NameBook = "Chí Phèo",
                            Quantity = 10
                        },
                        new
                        {
                            BookID = 2,
                            Author = "José Mauro de Vasconcelos",
                            CategoryID = 2,
                            Detail = "Cuốn sách chứa cả những cay đắng lẫn ngọt ngào.",
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSLT_2rjZ30psJYUZnAc-EKeQ7atzhCoaJpJA&s",
                            NameBook = "Cây Cam Ngọt Của Tôi",
                            Quantity = 5
                        },
                        new
                        {
                            BookID = 3,
                            Author = "Trần Trọng Kim",
                            CategoryID = 3,
                            Detail = "Cuốn sách tổng hợp lịch sử Việt Nam.",
                            ImageUrl = "https://product.hstatic.net/200000343865/product/viet-nam-su-luoc_ban-dac-biet_9781e7c1612941059b695bdb77302e61_master.jpg",
                            NameBook = "Việt Nam Sử Lược",
                            Quantity = 7
                        },
                        new
                        {
                            BookID = 4,
                            Author = "Sigmund Freud",
                            CategoryID = 4,
                            Detail = "Cuốn sách về lý thuyết phân tâm học của Freud.",
                            ImageUrl = "https://bizweb.dktcdn.net/thumb/1024x1024/100/363/455/products/phantamhocnhapmon02.jpg?v=1705552542217",
                            NameBook = "Phân tâm học nhập môn",
                            Quantity = 4
                        },
                        new
                        {
                            BookID = 5,
                            Author = "Dale Carnegie",
                            CategoryID = 5,
                            Detail = "Cuốn sách kinh điển về giao tiếp và quản lý con người.",
                            ImageUrl = "https://nhasachphuongnam.com/images/detailed/217/dac-nhan-tam-bc.jpg",
                            NameBook = "Đắc Nhân Tâm",
                            Quantity = 15
                        });
                });

            modelBuilder.Entity("LibraryManagement.Models.BookBorrowingHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BookID")
                        .HasColumnType("int");

                    b.Property<DateTime>("BorrowDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BookID");

                    b.HasIndex("StudentID");

                    b.ToTable("BookBorrowingHistories");
                });

            modelBuilder.Entity("LibraryManagement.Models.BookBorrowingList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BookID")
                        .HasColumnType("int");

                    b.Property<DateTime>("BorrowDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BookID");

                    b.HasIndex("StudentID");

                    b.ToTable("BookBorrowingLists");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BookID = 1,
                            BorrowDate = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2024, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            StudentID = 1
                        },
                        new
                        {
                            ID = 2,
                            BookID = 2,
                            BorrowDate = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2024, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            StudentID = 2
                        },
                        new
                        {
                            ID = 3,
                            BookID = 3,
                            BorrowDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2024, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            StudentID = 3
                        });
                });

            modelBuilder.Entity("LibraryManagement.Models.BookCategory", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("BookCategories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryDescription = "Sách thuộc lĩnh vực văn học, tiểu thuyết.",
                            CategoryName = "Văn học"
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryDescription = "Sách về tiểu thuyết, tiểu thuyết tự truyện.",
                            CategoryName = "Tiểu thuyết"
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryDescription = "Sách nghiên cứu về lịch sử.",
                            CategoryName = "Lịch sử"
                        },
                        new
                        {
                            CategoryID = 4,
                            CategoryDescription = "Sách về các học thuyết và triết lý.",
                            CategoryName = "Triết học"
                        },
                        new
                        {
                            CategoryID = 5,
                            CategoryDescription = "Sách về tâm lý và phát triển cá nhân.",
                            CategoryName = "Tâm lý học"
                        });
                });

            modelBuilder.Entity("LibraryManagement.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentID"));

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mssv")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentID = 1,
                            Class = "CNTT-K19",
                            Mssv = 12201033,
                            Phone = "0912345678",
                            StudentName = "Phan Hồ Anh Kha"
                        },
                        new
                        {
                            StudentID = 2,
                            Class = "KTL-K17",
                            Mssv = 20230002,
                            Phone = "0987654321",
                            StudentName = "Lê Thị Bích"
                        },
                        new
                        {
                            StudentID = 3,
                            Class = "NNA-21",
                            Mssv = 20230003,
                            Phone = "0911223344",
                            StudentName = "Phạm Văn Cường"
                        },
                        new
                        {
                            StudentID = 4,
                            Class = "QHCC-K18",
                            Mssv = 20230004,
                            Phone = "0933445566",
                            StudentName = "Trần Thị Duyên"
                        },
                        new
                        {
                            StudentID = 5,
                            Class = "CNTT-K19",
                            Mssv = 12201015,
                            Phone = "0977889900",
                            StudentName = "Trần Phúc Huynh"
                        });
                });

            modelBuilder.Entity("LibraryManagement.Models.Book", b =>
                {
                    b.HasOne("LibraryManagement.Models.BookCategory", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LibraryManagement.Models.BookBorrowingHistory", b =>
                {
                    b.HasOne("LibraryManagement.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LibraryManagement.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("LibraryManagement.Models.BookBorrowingList", b =>
                {
                    b.HasOne("LibraryManagement.Models.Book", "Book")
                        .WithMany("BookBorrowingLists")
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManagement.Models.Student", "Student")
                        .WithMany("BookBorrowingLists")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("LibraryManagement.Models.Book", b =>
                {
                    b.Navigation("BookBorrowingLists");
                });

            modelBuilder.Entity("LibraryManagement.Models.BookCategory", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LibraryManagement.Models.Student", b =>
                {
                    b.Navigation("BookBorrowingLists");
                });
#pragma warning restore 612, 618
        }
    }
}
